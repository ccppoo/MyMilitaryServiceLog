2,3,4장 주제가 책처럼 코드를 보여주면서 설명해야 이해가 가능한 장이라고 생각한다.
글로 표현하기 진짜 추상적인 주제다. 그래서인지 머릿속의 그 추상적인 개념을 사전처럼 정리해서 내놓기 참 힘들었다.
그래서 시간이 1,2장에 비해 좀 오래걸렸다.
더군더나 야간근무를 하며 쓴 거라 내용이 두서없고 난해하다...

==========================

프로젝트를 시작할 때 급발진 하는 경우가 많다.
나 혼자 진행하고, 갑작스러운 발상 때문에 빨리 만들지 않으면 잊어버릴까봐, 변수 이름 대충 짓는 건 애교에 불과하고 변수의 scope를 거의 전역만큼 큼직하게 정해놓고 코딩하는 경우가 많았다.
학교에서 iOS 수업을 같이 들은 Geek 한명이 있었는데, 얘도 그렇게 한다고 말해줬다.
초기에 구축하는 속도는 엄청 빠른데 대신에 나중에 디버깅 시간이 대부분이라고... 
다시 들었던 그 말을 생각해보면 코드스피츠에서 말한 개발 비용의 60%가 디버깅에 쓰인다는게 떠오른다.
물론 속도는 중요하지만, 앱을 날림으로 만들고 나중에 새어나오는 버그를 급급하게 덮다가 수정하기 힘들어 앱 서비스를 방치하거나, 새로 만드는 일들을 소비자 입장에서 봐왔기 때문에 객체지향적인 설계가 절실히 필요하다는게 느껴졌다.

DeepCreamPy 코드 작업을 했을 때 파이썬의 객체를 단지 변수관리 용도로 많이 사용했다.
그래서 변수를 self.~~~ 이런식으로 짓다보니, scope를 구분하지 못하고 비슷한 용도의 변수를 이름만 조금 바꿔서 새로 만들어 사용했다.

객체지향 설계는 반드시 처음부터 배울 필요는 없다.
객체를 다루는 방법과 요령을 익히고 스스로 삽질도 하고 팀 프로젝트를 진행하면서 불편함을 한번 쯤 겪어봐야 객체지향적 설계의 필요성을 느낄 수 있다고 생각한다.
일관된 인터페이스, 추상 클래스, 클래스를 이용하면 오픈소스에서 타인이 참여하기 편해진다.
객체를 다루고 나서 오브젝트 같은 책을 읽고 진지한 고민을 하는 것이 장기적으로 도움이 될거라 믿는다.
